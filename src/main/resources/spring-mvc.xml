<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
>


    <!--扫描注解-->
    <context:component-scan base-package="com.sakura"/>
    <mvc:annotation-driven/>


    <!--因为导入了多个配置文件，所以要ignore-unresolvable="true"-->
    <!--<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!--maxIdle: 最大空闲连接 -->
        <!--<property name="maxIdle" value="10" />-->
        <!--minIdle: 最小空闲连接 -->
        <property name="minIdle" value="5" />
        <!--removeAbandoned: 是否自动回收超时连接 -->
        <property name="removeAbandoned" value="true" />
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位) -->
        <property name="removeAbandonedTimeout" value="180" />
        <!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
        <property name="maxWait" value="3000" />
    </bean>

    <!--&lt;!&ndash;文件上传&ndash;&gt;-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--&lt;!&ndash; 上传文件大小上限，单位为字节（10MB） &ndash;&gt;-->
        <!--<property name="maxUploadSize">-->
            <!--<value>10485760</value>-->
        <!--</property>-->
        <!--&lt;!&ndash; 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 &ndash;&gt;-->
        <!--<property name="defaultEncoding">-->
            <!--<value>UTF-8</value>-->
        <!--</property>-->
    <!--</bean>-->


    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <description>配置文件上传</description>
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <!--配置文件工具类-->
    <bean id="propertiesHelp" class="com.sakura.util.PropertiesHelp"></bean>

    <!--事务配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--注解事务配置-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--扫描mybatisMapper包-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <!--&lt;!&ndash;配置pageHelper&ndash;&gt;-->
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageInterceptor">-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                            <!--helperDialect=mysql-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
    </bean>

    <!--扫描所有dao包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sakura.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


    <!--拦截器-->
    <!--<mvc:interceptors>-->
    <!--&lt;!&ndash; 多个拦截器，顺序执行 &ndash;&gt;-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/**"/>-->
    <!--<mvc:exclude-mapping path="/css/**"/>-->
    <!--<mvc:exclude-mapping path="/fonts/**"/>-->
    <!--<mvc:exclude-mapping path="/images/**"/>-->
    <!--<mvc:exclude-mapping path="/img/**"/>-->
    <!--<mvc:exclude-mapping path="/js/**"/>-->
    <!--<mvc:exclude-mapping path="/sass/**"/>-->
    <!--<bean class="com.sakura.controller.LoginCheckController"></bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!--&lt;!&ndash;静态资源访问&ndash;&gt;-->
    <mvc:default-servlet-handler/>




    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.security.access.AccessDeniedException">error/access-denied</prop>
                <prop key="net.yingzhuo.me.exception.NonEmptyGroupException">error/non-empty-group</prop>
            </props>
        </property>
        <property name="warnLogCategory" value="以下为警告信息" />
        <property name="defaultErrorView" value="error" />
        <property name="defaultStatusCode" value="500" />
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>


    <!--&lt;!&ndash;redis数据源&ndash;&gt;-->
    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
    <!--<property name="maxTotal" value="${redis.maxActive}" />-->
    <!--<property name="maxWaitMillis" value="${redis.maxWait}" />-->
    <!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
    <!--</bean>-->

    <!--&lt;!&ndash;spring-redis连接池管理工厂&ndash;&gt;-->
    <!--<bean id="jedisConnectionFactory"-->
    <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
    <!--p:host-name="${redis.host}"-->
    <!--p:port="${redis.port}"-->
    <!--p:password="${redis.pass}"-->
    <!--p:poolConfig-ref="poolConfig"/>-->
    <!--&lt;!&ndash; 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 &ndash;&gt;-->
    <!--<bean id="redisCacheTransfer" class="com.sakura.redis.RedisCacheTransfer">-->
    <!--<property name="jedisConnectionFactory" ref="jedisConnectionFactory" />-->
    <!--</bean>-->

    <import resource="spring-task.xml"/>
</beans>